{"version":3,"sources":["components/TodoItem.js","redux/selectors.js","constants/filterTypes.js","redux/actionTypes.js","redux/actions.js","hooks/useTodo.js","App.js","redux/reducers/todos.js","redux/reducers/index.js","redux/reducers/filters.js","redux/stores.js","index.js"],"names":["TodoItemWrapper","styled","div","props","theme","colors","primary_4","TodoContent","primary_5","$isDone","TodoButtonWrapper","TodoButton","button","DangerButton","todoItem","todo","deleteTodo","toggleTodo","data-id","id","isDone","content","onClick","selectTodos","stores","todoState","todos","selectFilter","filterState","COMPLETED","UNCOMPLETED","ADD_TODO","DELETE_TODO","TOGGLE_TODO","SET_FILTER","CLEAR_TODOS","setFilterState","filter","type","payload","useTodo","useState","inputValue","setInputValue","useSelector","dispatch","useDispatch","useEffect","window","localStorage","setItem","JSON","stringify","writeTodosToLocalStorage","showedTodos","handleInputChange","e","target","value","addTodo","trim","key","deleteTodoState","toggleTodoState","showAll","showCompleted","showUncompleted","clearAll","Title","h1","Filter","Button","NewTodoInput","input","Container","App","className","style","marginBottom","placeholder","onChange","onKeyPress","map","initialState","todoData","parse","getItem","undefined","combineReducers","state","action","length","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","primary_1","primary_2","primary_3","document","getElementById"],"mappings":"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","file":"static/js/main.6447d2c7.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst TodoItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px 20px;\n  margin-top: 20px;\n  word-break: break-word;\n  width: 95%;\n  border-bottom: 0.5px solid ${(props) => props.theme.colors.primary_4};\n  & + & {\n    margin-top: 5px;\n  }\n  & button {\n    opacity: 0;\n  }\n  &:hover button {\n    opacity: 1;\n  }\n`;\n\nconst TodoContent = styled.div`\n  color: ${(props) => props.theme.colors.primary_5};\n  font-size: 22px;\n  word-break: break-word;\n  width: 68%;\n  ${(props) => props.$isDone && `text-decoration: line-through;`}\n`;\n\nconst TodoButtonWrapper = styled.div``;\n\nconst TodoButton = styled.button`\n  margin: 5px 0 0 10px;\n  transition: all 0.1s linear;\n`;\n\nconst DangerButton = styled(TodoButton)`\n  background: #255e69;\n  color: whitesmoke;\n`;\n\nexport default function todoItem({ todo, deleteTodo, toggleTodo }) {\n  const handleDeleteClick = () => deleteTodo(todo.id);\n  const handleCompleteClick = () => toggleTodo(todo.id);\n\n  return (\n    <TodoItemWrapper data-id={todo.id}>\n      <TodoContent $isDone={todo.isDone}>{todo.content}</TodoContent>\n      <TodoButtonWrapper>\n        <TodoButton onClick={handleCompleteClick}>\n          {todo.isDone ? '未完成' : '已完成'}\n        </TodoButton>\n        <DangerButton onClick={handleDeleteClick}>刪除</DangerButton>\n      </TodoButtonWrapper>\n    </TodoItemWrapper>\n  );\n}\n","export const selectTodos = (stores) => stores.todoState.todos;\nexport const selectFilter = (stores) => stores.filterState;","export const ALL = 'ALL';\nexport const COMPLETED = 'COMPLETED';\nexport const UNCOMPLETED = 'UNCOMPLETED';","export const ADD_TODO = 'ADD_TODO';\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\nexport const SET_FILTER = 'SET_FILTER';\nexport const CLEAR_TODOS = 'CLEAR_TODOS';\n","import {\n  ADD_TODO,\n  DELETE_TODO,\n  TOGGLE_TODO,\n  SET_FILTER,\n  CLEAR_TODOS,\n} from './actionTypes';\n\nexport function addTodoState(content) {\n  return {\n    type: ADD_TODO,\n    payload: { content },\n  };\n}\n\nexport function deleteTodoState(id) {\n  return {\n    type: DELETE_TODO,\n    payload: { id },\n  };\n}\n\nexport function toggleTodoState(id) {\n  return {\n    type: TOGGLE_TODO,\n    payload: { id },\n  };\n}\n\nexport function clearTodosState() {\n  return {\n    type: CLEAR_TODOS,\n  };\n}\n\nexport function setFilterState(filter) {\n  return {\n    type: SET_FILTER,\n    payload: { filter },\n  };\n}\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTodos, selectFilter } from '../redux/selectors';\nimport { ALL, COMPLETED, UNCOMPLETED } from '../constants/filterTypes';\nimport {\n  addTodoState,\n  deleteTodoState,\n  toggleTodoState,\n  clearTodosState,\n  setFilterState,\n} from '../redux/actions';\n\nfunction writeTodosToLocalStorage(todos) {\n  window.localStorage.setItem('todos', JSON.stringify(todos));\n}\n\nexport default function useTodo() {\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = (e) => setInputValue(e.target.value);\n  const todos = useSelector(selectTodos);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    writeTodosToLocalStorage(todos);\n  }, [todos]);\n\n  const addTodo = (e) => {\n    if (inputValue.trim() !== '' && e.key === 'Enter') {\n      dispatch(addTodoState(inputValue));\n      setInputValue('');\n    }\n  };\n\n  const deleteTodo = (id) => {\n    dispatch(deleteTodoState(id));\n  };\n\n  const toggleTodo = (id) => {\n    dispatch(toggleTodoState(id));\n  };\n\n  const showAll = () => {\n    dispatch(setFilterState(ALL));\n  };\n\n  const showCompleted = () => {\n    dispatch(setFilterState(COMPLETED));\n  };\n\n  const showUncompleted = () => {\n    dispatch(setFilterState(UNCOMPLETED));\n  };\n\n  const clearAll = () => {\n    dispatch(clearTodosState());\n  };\n\n  const showedTodos = todos.filter((todo) => {\n    switch (filter) {\n      case ALL: {\n        return todo;\n      }\n      case COMPLETED: {\n        return todo.isDone === true;\n      }\n      case UNCOMPLETED: {\n        return todo.isDone === false;\n      }\n      default: {\n        return todo;\n      }\n    }\n  });\n\n  return {\n    inputValue,\n    showedTodos,\n    setInputValue,\n    handleInputChange,\n    addTodo,\n    deleteTodo,\n    toggleTodo,\n    showAll,\n    showCompleted,\n    showUncompleted,\n    clearAll,\n  };\n}\n","import './App.css';\nimport styled from 'styled-components';\nimport TodoItem from './components/TodoItem';\nimport useTodo from './hooks/useTodo';\n\nconst Title = styled.h1``;\n\nconst Filter = styled.div``;\n\nconst Button = styled.button`\n  margin-left: 10px;\n`;\n\nconst DangerButton = styled(Button)`\n  background: #255e69;\n  color: whitesmoke;\n`;\n\nconst NewTodoInput = styled.input`\n  padding: 10px 10px;\n  width: calc(100% - 20px);\n  background-color: #6a959d;\n  color: whitesmoke;\n  font-size: 20px;\n  vertical-align: middle;\n`;\n\nconst Container = styled.div`\n  margin: 40px auto;\n  padding: 30px;\n  max-width: 700px;\n  background-color: #D1E2E5;\n  font-family: 'Josefin Sans', sans-serif;\n}\n`;\n\nfunction App() {\n  const {\n    inputValue,\n    showedTodos,\n    handleInputChange,\n    addTodo,\n    deleteTodo,\n    toggleTodo,\n    showAll,\n    showCompleted,\n    showUncompleted,\n    clearAll,\n  } = useTodo();\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <Title>Redux Hooks Todo List</Title>\n        <Filter style={{ marginBottom: '30px' }}>\n          <Button onClick={showAll}>全部</Button>\n          <Button onClick={showCompleted}>已完成</Button>\n          <Button onClick={showUncompleted}>未完成</Button>\n          <DangerButton onClick={clearAll}>清空</DangerButton>\n        </Filter>\n\n        <NewTodoInput\n          type=\"text\"\n          placeholder=\"Type something and press enter\"\n          value={inputValue}\n          onChange={handleInputChange}\n          onKeyPress={addTodo}\n        />\n\n        {showedTodos.map((todo) => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            deleteTodo={deleteTodo}\n            toggleTodo={toggleTodo}\n          />\n        ))}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  ADD_TODO,\n  DELETE_TODO,\n  TOGGLE_TODO,\n  CLEAR_TODOS,\n} from '../actionTypes';\n\nlet initialState = '';\nlet todoData = JSON.parse(window.localStorage.getItem('todos'));\n\nif (todoData && todoData[0] !== undefined) {\n  initialState = {\n    todos: todoData,\n  };\n} else {\n  initialState = {\n    todos: [],\n  };\n}\n\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO: {\n      return {\n        todos: [\n          {\n            id: state.todos.length ? state.todos[0].id + 1 : 1,\n            content: action.payload.content,\n            isDone: false,\n          },\n          ...state.todos,\n        ],\n      };\n    }\n\n    case DELETE_TODO: {\n      return {\n        todos: state.todos.filter((todo) => todo.id !== action.payload.id),\n      };\n    }\n\n    case TOGGLE_TODO: {\n      return {\n        todos: state.todos.map((todo) => {\n          if (todo.id !== action.payload.id) return todo;\n          return {\n            ...todo,\n            isDone: !todo.isDone,\n          };\n        }),\n      };\n    }\n\n    case CLEAR_TODOS: {\n      return {\n        todos: [],\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from 'redux';\nimport todos from './todos';\nimport filters from './filters';\n\nexport default combineReducers({\n  todoState: todos,\n  filterState: filters,\n});\n","import { SET_FILTER } from '../actionTypes';\n\nconst initialState = 'ALL';\n\nexport default function filterReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_FILTER: {\n      return action.payload.filter;\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nexport default createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from 'styled-components';\nimport { Provider } from 'react-redux';\nimport store from './redux/stores';\n\nconst theme = {\n  colors: {\n    primary_1: '#6A959D',\n    primary_2: '#D1E2E5',\n    primary_3: '#9EBEC4',\n    primary_4: '#467B85',\n    primary_5: '#255E69',\n  },\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>    \n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}